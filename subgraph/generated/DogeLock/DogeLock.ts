// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class EnforcedOptionSet extends ethereum.Event {
  get params(): EnforcedOptionSet__Params {
    return new EnforcedOptionSet__Params(this);
  }
}

export class EnforcedOptionSet__Params {
  _event: EnforcedOptionSet;

  constructor(event: EnforcedOptionSet) {
    this._event = event;
  }

  get _enforcedOptions(): Array<EnforcedOptionSet_enforcedOptionsStruct> {
    return this._event.parameters[0].value.toTupleArray<EnforcedOptionSet_enforcedOptionsStruct>();
  }
}

export class EnforcedOptionSet_enforcedOptionsStruct extends ethereum.Tuple {
  get eid(): BigInt {
    return this[0].toBigInt();
  }

  get msgType(): i32 {
    return this[1].toI32();
  }

  get options(): Bytes {
    return this[2].toBytes();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Lock extends ethereum.Event {
  get params(): Lock__Params {
    return new Lock__Params(this);
  }
}

export class Lock__Params {
  _event: Lock;

  constructor(event: Lock) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get blockNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MsgInspectorSet extends ethereum.Event {
  get params(): MsgInspectorSet__Params {
    return new MsgInspectorSet__Params(this);
  }
}

export class MsgInspectorSet__Params {
  _event: MsgInspectorSet;

  constructor(event: MsgInspectorSet) {
    this._event = event;
  }

  get inspector(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OFTReceived extends ethereum.Event {
  get params(): OFTReceived__Params {
    return new OFTReceived__Params(this);
  }
}

export class OFTReceived__Params {
  _event: OFTReceived;

  constructor(event: OFTReceived) {
    this._event = event;
  }

  get guid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get srcEid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get toAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountReceivedLD(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OFTSent extends ethereum.Event {
  get params(): OFTSent__Params {
    return new OFTSent__Params(this);
  }
}

export class OFTSent__Params {
  _event: OFTSent;

  constructor(event: OFTSent) {
    this._event = event;
  }

  get guid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get dstEid(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fromAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountSentLD(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amountReceivedLD(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PeerSet extends ethereum.Event {
  get params(): PeerSet__Params {
    return new PeerSet__Params(this);
  }
}

export class PeerSet__Params {
  _event: PeerSet;

  constructor(event: PeerSet) {
    this._event = event;
  }

  get eid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get peer(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class PreCrimeSet extends ethereum.Event {
  get params(): PreCrimeSet__Params {
    return new PreCrimeSet__Params(this);
  }
}

export class PreCrimeSet__Params {
  _event: PreCrimeSet;

  constructor(event: PreCrimeSet) {
    this._event = event;
  }

  get preCrimeAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unlock extends ethereum.Event {
  get params(): Unlock__Params {
    return new Unlock__Params(this);
  }
}

export class Unlock__Params {
  _event: Unlock;

  constructor(event: Unlock) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get blockNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DogeLock__allowInitializePathInputOriginStruct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class DogeLock__isComposeMsgSenderInputParam0Struct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class DogeLock__oAppVersionResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getSenderVersion(): BigInt {
    return this.value0;
  }

  getReceiverVersion(): BigInt {
    return this.value1;
  }
}

export class DogeLock__oftVersionResult {
  value0: Bytes;
  value1: BigInt;

  constructor(value0: Bytes, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getInterfaceId(): Bytes {
    return this.value0;
  }

  getVersion(): BigInt {
    return this.value1;
  }
}

export class DogeLock__quoteOFTResultOftLimitStruct extends ethereum.Tuple {
  get minAmountLD(): BigInt {
    return this[0].toBigInt();
  }

  get maxAmountLD(): BigInt {
    return this[1].toBigInt();
  }
}

export class DogeLock__quoteOFTResultOftFeeDetailsStruct extends ethereum.Tuple {
  get feeAmountLD(): BigInt {
    return this[0].toBigInt();
  }

  get description(): string {
    return this[1].toString();
  }
}

export class DogeLock__quoteOFTResultOftReceiptStruct extends ethereum.Tuple {
  get amountSentLD(): BigInt {
    return this[0].toBigInt();
  }

  get amountReceivedLD(): BigInt {
    return this[1].toBigInt();
  }
}

export class DogeLock__quoteOFTResult {
  value0: DogeLock__quoteOFTResultOftLimitStruct;
  value1: Array<DogeLock__quoteOFTResultOftFeeDetailsStruct>;
  value2: DogeLock__quoteOFTResultOftReceiptStruct;

  constructor(
    value0: DogeLock__quoteOFTResultOftLimitStruct,
    value1: Array<DogeLock__quoteOFTResultOftFeeDetailsStruct>,
    value2: DogeLock__quoteOFTResultOftReceiptStruct,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTupleArray(this.value1));
    map.set("value2", ethereum.Value.fromTuple(this.value2));
    return map;
  }

  getOftLimit(): DogeLock__quoteOFTResultOftLimitStruct {
    return this.value0;
  }

  getOftFeeDetails(): Array<DogeLock__quoteOFTResultOftFeeDetailsStruct> {
    return this.value1;
  }

  getOftReceipt(): DogeLock__quoteOFTResultOftReceiptStruct {
    return this.value2;
  }
}

export class DogeLock__quoteOFTInput_sendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class DogeLock__quoteSendResultMsgFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class DogeLock__quoteSendInput_sendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class DogeLock extends ethereum.SmartContract {
  static bind(address: Address): DogeLock {
    return new DogeLock("DogeLock", address);
  }

  SEND(): i32 {
    let result = super.call("SEND", "SEND():(uint16)", []);

    return result[0].toI32();
  }

  try_SEND(): ethereum.CallResult<i32> {
    let result = super.tryCall("SEND", "SEND():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  SEND_AND_CALL(): i32 {
    let result = super.call("SEND_AND_CALL", "SEND_AND_CALL():(uint16)", []);

    return result[0].toI32();
  }

  try_SEND_AND_CALL(): ethereum.CallResult<i32> {
    let result = super.tryCall("SEND_AND_CALL", "SEND_AND_CALL():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  addressToBytes32(_addr: Address): Bytes {
    let result = super.call(
      "addressToBytes32",
      "addressToBytes32(address):(bytes32)",
      [ethereum.Value.fromAddress(_addr)],
    );

    return result[0].toBytes();
  }

  try_addressToBytes32(_addr: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "addressToBytes32",
      "addressToBytes32(address):(bytes32)",
      [ethereum.Value.fromAddress(_addr)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowInitializePath(
    origin: DogeLock__allowInitializePathInputOriginStruct,
  ): boolean {
    let result = super.call(
      "allowInitializePath",
      "allowInitializePath((uint32,bytes32,uint64)):(bool)",
      [ethereum.Value.fromTuple(origin)],
    );

    return result[0].toBoolean();
  }

  try_allowInitializePath(
    origin: DogeLock__allowInitializePathInputOriginStruct,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowInitializePath",
      "allowInitializePath((uint32,bytes32,uint64)):(bool)",
      [ethereum.Value.fromTuple(origin)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  approvalRequired(): boolean {
    let result = super.call(
      "approvalRequired",
      "approvalRequired():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_approvalRequired(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "approvalRequired",
      "approvalRequired():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balances(user: Address): BigInt {
    let result = super.call("balances", "balances(address):(uint256)", [
      ethereum.Value.fromAddress(user),
    ]);

    return result[0].toBigInt();
  }

  try_balances(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balances", "balances(address):(uint256)", [
      ethereum.Value.fromAddress(user),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bridgeTime(): BigInt {
    let result = super.call("bridgeTime", "bridgeTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_bridgeTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("bridgeTime", "bridgeTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  combineOptions(_eid: BigInt, _msgType: i32, _extraOptions: Bytes): Bytes {
    let result = super.call(
      "combineOptions",
      "combineOptions(uint32,uint16,bytes):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_eid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_msgType)),
        ethereum.Value.fromBytes(_extraOptions),
      ],
    );

    return result[0].toBytes();
  }

  try_combineOptions(
    _eid: BigInt,
    _msgType: i32,
    _extraOptions: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "combineOptions",
      "combineOptions(uint32,uint16,bytes):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_eid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_msgType)),
        ethereum.Value.fromBytes(_extraOptions),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  decimalConversionRate(): BigInt {
    let result = super.call(
      "decimalConversionRate",
      "decimalConversionRate():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_decimalConversionRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "decimalConversionRate",
      "decimalConversionRate():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dogeCoin(): Address {
    let result = super.call("dogeCoin", "dogeCoin():(address)", []);

    return result[0].toAddress();
  }

  try_dogeCoin(): ethereum.CallResult<Address> {
    let result = super.tryCall("dogeCoin", "dogeCoin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  endpoint(): Address {
    let result = super.call("endpoint", "endpoint():(address)", []);

    return result[0].toAddress();
  }

  try_endpoint(): ethereum.CallResult<Address> {
    let result = super.tryCall("endpoint", "endpoint():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  enforcedOptions(_eid: BigInt, _msgType: i32): Bytes {
    let result = super.call(
      "enforcedOptions",
      "enforcedOptions(uint32,uint16):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_eid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_msgType)),
      ],
    );

    return result[0].toBytes();
  }

  try_enforcedOptions(_eid: BigInt, _msgType: i32): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "enforcedOptions",
      "enforcedOptions(uint32,uint16):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(_eid),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_msgType)),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isComposeMsgSender(
    param0: DogeLock__isComposeMsgSenderInputParam0Struct,
    param1: Bytes,
    _sender: Address,
  ): boolean {
    let result = super.call(
      "isComposeMsgSender",
      "isComposeMsgSender((uint32,bytes32,uint64),bytes,address):(bool)",
      [
        ethereum.Value.fromTuple(param0),
        ethereum.Value.fromBytes(param1),
        ethereum.Value.fromAddress(_sender),
      ],
    );

    return result[0].toBoolean();
  }

  try_isComposeMsgSender(
    param0: DogeLock__isComposeMsgSenderInputParam0Struct,
    param1: Bytes,
    _sender: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isComposeMsgSender",
      "isComposeMsgSender((uint32,bytes32,uint64),bytes,address):(bool)",
      [
        ethereum.Value.fromTuple(param0),
        ethereum.Value.fromBytes(param1),
        ethereum.Value.fromAddress(_sender),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPeer(_eid: BigInt, _peer: Bytes): boolean {
    let result = super.call("isPeer", "isPeer(uint32,bytes32):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_eid),
      ethereum.Value.fromFixedBytes(_peer),
    ]);

    return result[0].toBoolean();
  }

  try_isPeer(_eid: BigInt, _peer: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPeer", "isPeer(uint32,bytes32):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_eid),
      ethereum.Value.fromFixedBytes(_peer),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxLockAmount(): BigInt {
    let result = super.call("maxLockAmount", "maxLockAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxLockAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxLockAmount",
      "maxLockAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  msgInspector(): Address {
    let result = super.call("msgInspector", "msgInspector():(address)", []);

    return result[0].toAddress();
  }

  try_msgInspector(): ethereum.CallResult<Address> {
    let result = super.tryCall("msgInspector", "msgInspector():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nextNonce(param0: BigInt, param1: Bytes): BigInt {
    let result = super.call("nextNonce", "nextNonce(uint32,bytes32):(uint64)", [
      ethereum.Value.fromUnsignedBigInt(param0),
      ethereum.Value.fromFixedBytes(param1),
    ]);

    return result[0].toBigInt();
  }

  try_nextNonce(param0: BigInt, param1: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextNonce",
      "nextNonce(uint32,bytes32):(uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromFixedBytes(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  oApp(): Address {
    let result = super.call("oApp", "oApp():(address)", []);

    return result[0].toAddress();
  }

  try_oApp(): ethereum.CallResult<Address> {
    let result = super.tryCall("oApp", "oApp():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  oAppVersion(): DogeLock__oAppVersionResult {
    let result = super.call("oAppVersion", "oAppVersion():(uint64,uint64)", []);

    return new DogeLock__oAppVersionResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_oAppVersion(): ethereum.CallResult<DogeLock__oAppVersionResult> {
    let result = super.tryCall(
      "oAppVersion",
      "oAppVersion():(uint64,uint64)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DogeLock__oAppVersionResult(value[0].toBigInt(), value[1].toBigInt()),
    );
  }

  oftVersion(): DogeLock__oftVersionResult {
    let result = super.call("oftVersion", "oftVersion():(bytes4,uint64)", []);

    return new DogeLock__oftVersionResult(
      result[0].toBytes(),
      result[1].toBigInt(),
    );
  }

  try_oftVersion(): ethereum.CallResult<DogeLock__oftVersionResult> {
    let result = super.tryCall(
      "oftVersion",
      "oftVersion():(bytes4,uint64)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DogeLock__oftVersionResult(value[0].toBytes(), value[1].toBigInt()),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  peers(_eid: BigInt): Bytes {
    let result = super.call("peers", "peers(uint32):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(_eid),
    ]);

    return result[0].toBytes();
  }

  try_peers(_eid: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("peers", "peers(uint32):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(_eid),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  personalMaxLockAmount(): BigInt {
    let result = super.call(
      "personalMaxLockAmount",
      "personalMaxLockAmount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_personalMaxLockAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "personalMaxLockAmount",
      "personalMaxLockAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  personalMinLockAmount(): BigInt {
    let result = super.call(
      "personalMinLockAmount",
      "personalMinLockAmount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_personalMinLockAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "personalMinLockAmount",
      "personalMinLockAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  preCrime(): Address {
    let result = super.call("preCrime", "preCrime():(address)", []);

    return result[0].toAddress();
  }

  try_preCrime(): ethereum.CallResult<Address> {
    let result = super.tryCall("preCrime", "preCrime():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  quoteOFT(
    _sendParam: DogeLock__quoteOFTInput_sendParamStruct,
  ): DogeLock__quoteOFTResult {
    let result = super.call(
      "quoteOFT",
      "quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes)):((uint256,uint256),(int256,string)[],(uint256,uint256))",
      [ethereum.Value.fromTuple(_sendParam)],
    );

    return changetype<DogeLock__quoteOFTResult>(
      new DogeLock__quoteOFTResult(
        changetype<DogeLock__quoteOFTResultOftLimitStruct>(result[0].toTuple()),
        result[1].toTupleArray<DogeLock__quoteOFTResultOftFeeDetailsStruct>(),
        changetype<DogeLock__quoteOFTResultOftReceiptStruct>(
          result[2].toTuple(),
        ),
      ),
    );
  }

  try_quoteOFT(
    _sendParam: DogeLock__quoteOFTInput_sendParamStruct,
  ): ethereum.CallResult<DogeLock__quoteOFTResult> {
    let result = super.tryCall(
      "quoteOFT",
      "quoteOFT((uint32,bytes32,uint256,uint256,bytes,bytes,bytes)):((uint256,uint256),(int256,string)[],(uint256,uint256))",
      [ethereum.Value.fromTuple(_sendParam)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DogeLock__quoteOFTResult>(
        new DogeLock__quoteOFTResult(
          changetype<DogeLock__quoteOFTResultOftLimitStruct>(
            value[0].toTuple(),
          ),
          value[1].toTupleArray<DogeLock__quoteOFTResultOftFeeDetailsStruct>(),
          changetype<DogeLock__quoteOFTResultOftReceiptStruct>(
            value[2].toTuple(),
          ),
        ),
      ),
    );
  }

  quoteSend(
    _sendParam: DogeLock__quoteSendInput_sendParamStruct,
    _payInLzToken: boolean,
  ): DogeLock__quoteSendResultMsgFeeStruct {
    let result = super.call(
      "quoteSend",
      "quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool):((uint256,uint256))",
      [
        ethereum.Value.fromTuple(_sendParam),
        ethereum.Value.fromBoolean(_payInLzToken),
      ],
    );

    return changetype<DogeLock__quoteSendResultMsgFeeStruct>(
      result[0].toTuple(),
    );
  }

  try_quoteSend(
    _sendParam: DogeLock__quoteSendInput_sendParamStruct,
    _payInLzToken: boolean,
  ): ethereum.CallResult<DogeLock__quoteSendResultMsgFeeStruct> {
    let result = super.tryCall(
      "quoteSend",
      "quoteSend((uint32,bytes32,uint256,uint256,bytes,bytes,bytes),bool):((uint256,uint256))",
      [
        ethereum.Value.fromTuple(_sendParam),
        ethereum.Value.fromBoolean(_payInLzToken),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DogeLock__quoteSendResultMsgFeeStruct>(value[0].toTuple()),
    );
  }

  sharedDecimals(): i32 {
    let result = super.call("sharedDecimals", "sharedDecimals():(uint8)", []);

    return result[0].toI32();
  }

  try_sharedDecimals(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "sharedDecimals",
      "sharedDecimals():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalBalance(): BigInt {
    let result = super.call("totalBalance", "totalBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalBalance", "totalBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _dogeCoin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lzEndpoint(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _bridgeTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BridgeCall extends ethereum.Call {
  get inputs(): BridgeCall__Inputs {
    return new BridgeCall__Inputs(this);
  }

  get outputs(): BridgeCall__Outputs {
    return new BridgeCall__Outputs(this);
  }
}

export class BridgeCall__Inputs {
  _call: BridgeCall;

  constructor(call: BridgeCall) {
    this._call = call;
  }

  get _sendParam(): BridgeCall_sendParamStruct {
    return changetype<BridgeCall_sendParamStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _fee(): BridgeCall_feeStruct {
    return changetype<BridgeCall_feeStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get _refundAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class BridgeCall__Outputs {
  _call: BridgeCall;

  constructor(call: BridgeCall) {
    this._call = call;
  }

  get msgReceipt(): BridgeCallMsgReceiptStruct {
    return changetype<BridgeCallMsgReceiptStruct>(
      this._call.outputValues[0].value.toTuple(),
    );
  }

  get oftReceipt(): BridgeCallOftReceiptStruct {
    return changetype<BridgeCallOftReceiptStruct>(
      this._call.outputValues[1].value.toTuple(),
    );
  }
}

export class BridgeCall_sendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class BridgeCall_feeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class BridgeCallMsgReceiptStruct extends ethereum.Tuple {
  get guid(): Bytes {
    return this[0].toBytes();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get fee(): BridgeCallMsgReceiptFeeStruct {
    return changetype<BridgeCallMsgReceiptFeeStruct>(this[2].toTuple());
  }
}

export class BridgeCallMsgReceiptFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class BridgeCallOftReceiptStruct extends ethereum.Tuple {
  get amountSentLD(): BigInt {
    return this[0].toBigInt();
  }

  get amountReceivedLD(): BigInt {
    return this[1].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class LzReceiveCall extends ethereum.Call {
  get inputs(): LzReceiveCall__Inputs {
    return new LzReceiveCall__Inputs(this);
  }

  get outputs(): LzReceiveCall__Outputs {
    return new LzReceiveCall__Outputs(this);
  }
}

export class LzReceiveCall__Inputs {
  _call: LzReceiveCall;

  constructor(call: LzReceiveCall) {
    this._call = call;
  }

  get _origin(): LzReceiveCall_originStruct {
    return changetype<LzReceiveCall_originStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _guid(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _message(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _executor(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _extraData(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class LzReceiveCall__Outputs {
  _call: LzReceiveCall;

  constructor(call: LzReceiveCall) {
    this._call = call;
  }
}

export class LzReceiveCall_originStruct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class LzReceiveAndRevertCall extends ethereum.Call {
  get inputs(): LzReceiveAndRevertCall__Inputs {
    return new LzReceiveAndRevertCall__Inputs(this);
  }

  get outputs(): LzReceiveAndRevertCall__Outputs {
    return new LzReceiveAndRevertCall__Outputs(this);
  }
}

export class LzReceiveAndRevertCall__Inputs {
  _call: LzReceiveAndRevertCall;

  constructor(call: LzReceiveAndRevertCall) {
    this._call = call;
  }

  get _packets(): Array<LzReceiveAndRevertCall_packetsStruct> {
    return this._call.inputValues[0].value.toTupleArray<LzReceiveAndRevertCall_packetsStruct>();
  }
}

export class LzReceiveAndRevertCall__Outputs {
  _call: LzReceiveAndRevertCall;

  constructor(call: LzReceiveAndRevertCall) {
    this._call = call;
  }
}

export class LzReceiveAndRevertCall_packetsStruct extends ethereum.Tuple {
  get origin(): LzReceiveAndRevertCall_packetsOriginStruct {
    return changetype<LzReceiveAndRevertCall_packetsOriginStruct>(
      this[0].toTuple(),
    );
  }

  get dstEid(): BigInt {
    return this[1].toBigInt();
  }

  get receiver(): Address {
    return this[2].toAddress();
  }

  get guid(): Bytes {
    return this[3].toBytes();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get executor(): Address {
    return this[5].toAddress();
  }

  get message(): Bytes {
    return this[6].toBytes();
  }

  get extraData(): Bytes {
    return this[7].toBytes();
  }
}

export class LzReceiveAndRevertCall_packetsOriginStruct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class LzReceiveSimulateCall extends ethereum.Call {
  get inputs(): LzReceiveSimulateCall__Inputs {
    return new LzReceiveSimulateCall__Inputs(this);
  }

  get outputs(): LzReceiveSimulateCall__Outputs {
    return new LzReceiveSimulateCall__Outputs(this);
  }
}

export class LzReceiveSimulateCall__Inputs {
  _call: LzReceiveSimulateCall;

  constructor(call: LzReceiveSimulateCall) {
    this._call = call;
  }

  get _origin(): LzReceiveSimulateCall_originStruct {
    return changetype<LzReceiveSimulateCall_originStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _guid(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _message(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _executor(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _extraData(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class LzReceiveSimulateCall__Outputs {
  _call: LzReceiveSimulateCall;

  constructor(call: LzReceiveSimulateCall) {
    this._call = call;
  }
}

export class LzReceiveSimulateCall_originStruct extends ethereum.Tuple {
  get srcEid(): BigInt {
    return this[0].toBigInt();
  }

  get sender(): Bytes {
    return this[1].toBytes();
  }

  get nonce(): BigInt {
    return this[2].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SendCall extends ethereum.Call {
  get inputs(): SendCall__Inputs {
    return new SendCall__Inputs(this);
  }

  get outputs(): SendCall__Outputs {
    return new SendCall__Outputs(this);
  }
}

export class SendCall__Inputs {
  _call: SendCall;

  constructor(call: SendCall) {
    this._call = call;
  }

  get _sendParam(): SendCall_sendParamStruct {
    return changetype<SendCall_sendParamStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _fee(): SendCall_feeStruct {
    return changetype<SendCall_feeStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }

  get _refundAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SendCall__Outputs {
  _call: SendCall;

  constructor(call: SendCall) {
    this._call = call;
  }

  get msgReceipt(): SendCallMsgReceiptStruct {
    return changetype<SendCallMsgReceiptStruct>(
      this._call.outputValues[0].value.toTuple(),
    );
  }

  get oftReceipt(): SendCallOftReceiptStruct {
    return changetype<SendCallOftReceiptStruct>(
      this._call.outputValues[1].value.toTuple(),
    );
  }
}

export class SendCall_sendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class SendCall_feeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendCallMsgReceiptStruct extends ethereum.Tuple {
  get guid(): Bytes {
    return this[0].toBytes();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get fee(): SendCallMsgReceiptFeeStruct {
    return changetype<SendCallMsgReceiptFeeStruct>(this[2].toTuple());
  }
}

export class SendCallMsgReceiptFeeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class SendCallOftReceiptStruct extends ethereum.Tuple {
  get amountSentLD(): BigInt {
    return this[0].toBigInt();
  }

  get amountReceivedLD(): BigInt {
    return this[1].toBigInt();
  }
}

export class SetDelegateCall extends ethereum.Call {
  get inputs(): SetDelegateCall__Inputs {
    return new SetDelegateCall__Inputs(this);
  }

  get outputs(): SetDelegateCall__Outputs {
    return new SetDelegateCall__Outputs(this);
  }
}

export class SetDelegateCall__Inputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }

  get _delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDelegateCall__Outputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }
}

export class SetEnforcedOptionsCall extends ethereum.Call {
  get inputs(): SetEnforcedOptionsCall__Inputs {
    return new SetEnforcedOptionsCall__Inputs(this);
  }

  get outputs(): SetEnforcedOptionsCall__Outputs {
    return new SetEnforcedOptionsCall__Outputs(this);
  }
}

export class SetEnforcedOptionsCall__Inputs {
  _call: SetEnforcedOptionsCall;

  constructor(call: SetEnforcedOptionsCall) {
    this._call = call;
  }

  get _enforcedOptions(): Array<SetEnforcedOptionsCall_enforcedOptionsStruct> {
    return this._call.inputValues[0].value.toTupleArray<SetEnforcedOptionsCall_enforcedOptionsStruct>();
  }
}

export class SetEnforcedOptionsCall__Outputs {
  _call: SetEnforcedOptionsCall;

  constructor(call: SetEnforcedOptionsCall) {
    this._call = call;
  }
}

export class SetEnforcedOptionsCall_enforcedOptionsStruct extends ethereum.Tuple {
  get eid(): BigInt {
    return this[0].toBigInt();
  }

  get msgType(): i32 {
    return this[1].toI32();
  }

  get options(): Bytes {
    return this[2].toBytes();
  }
}

export class SetMaxCall extends ethereum.Call {
  get inputs(): SetMaxCall__Inputs {
    return new SetMaxCall__Inputs(this);
  }

  get outputs(): SetMaxCall__Outputs {
    return new SetMaxCall__Outputs(this);
  }
}

export class SetMaxCall__Inputs {
  _call: SetMaxCall;

  constructor(call: SetMaxCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxCall__Outputs {
  _call: SetMaxCall;

  constructor(call: SetMaxCall) {
    this._call = call;
  }
}

export class SetMsgInspectorCall extends ethereum.Call {
  get inputs(): SetMsgInspectorCall__Inputs {
    return new SetMsgInspectorCall__Inputs(this);
  }

  get outputs(): SetMsgInspectorCall__Outputs {
    return new SetMsgInspectorCall__Outputs(this);
  }
}

export class SetMsgInspectorCall__Inputs {
  _call: SetMsgInspectorCall;

  constructor(call: SetMsgInspectorCall) {
    this._call = call;
  }

  get _msgInspector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMsgInspectorCall__Outputs {
  _call: SetMsgInspectorCall;

  constructor(call: SetMsgInspectorCall) {
    this._call = call;
  }
}

export class SetPeerCall extends ethereum.Call {
  get inputs(): SetPeerCall__Inputs {
    return new SetPeerCall__Inputs(this);
  }

  get outputs(): SetPeerCall__Outputs {
    return new SetPeerCall__Outputs(this);
  }
}

export class SetPeerCall__Inputs {
  _call: SetPeerCall;

  constructor(call: SetPeerCall) {
    this._call = call;
  }

  get _eid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _peer(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetPeerCall__Outputs {
  _call: SetPeerCall;

  constructor(call: SetPeerCall) {
    this._call = call;
  }
}

export class SetPersonalLimitCall extends ethereum.Call {
  get inputs(): SetPersonalLimitCall__Inputs {
    return new SetPersonalLimitCall__Inputs(this);
  }

  get outputs(): SetPersonalLimitCall__Outputs {
    return new SetPersonalLimitCall__Outputs(this);
  }
}

export class SetPersonalLimitCall__Inputs {
  _call: SetPersonalLimitCall;

  constructor(call: SetPersonalLimitCall) {
    this._call = call;
  }

  get _max(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _min(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPersonalLimitCall__Outputs {
  _call: SetPersonalLimitCall;

  constructor(call: SetPersonalLimitCall) {
    this._call = call;
  }
}

export class SetPreCrimeCall extends ethereum.Call {
  get inputs(): SetPreCrimeCall__Inputs {
    return new SetPreCrimeCall__Inputs(this);
  }

  get outputs(): SetPreCrimeCall__Outputs {
    return new SetPreCrimeCall__Outputs(this);
  }
}

export class SetPreCrimeCall__Inputs {
  _call: SetPreCrimeCall;

  constructor(call: SetPreCrimeCall) {
    this._call = call;
  }

  get _preCrime(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPreCrimeCall__Outputs {
  _call: SetPreCrimeCall;

  constructor(call: SetPreCrimeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}
