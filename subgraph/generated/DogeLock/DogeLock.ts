// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Bridge extends ethereum.Event {
  get params(): Bridge__Params {
    return new Bridge__Params(this);
  }
}

export class Bridge__Params {
  _event: Bridge;

  constructor(event: Bridge) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sendParam(): BridgeSendParamStruct {
    return changetype<BridgeSendParamStruct>(
      this._event.parameters[2].value.toTuple(),
    );
  }
}

export class BridgeSendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Lock extends ethereum.Event {
  get params(): Lock__Params {
    return new Lock__Params(this);
  }
}

export class Lock__Params {
  _event: Lock;

  constructor(event: Lock) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get blockNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Unlock extends ethereum.Event {
  get params(): Unlock__Params {
    return new Unlock__Params(this);
  }
}

export class Unlock__Params {
  _event: Unlock;

  constructor(event: Unlock) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get blockNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DogeLock extends ethereum.SmartContract {
  static bind(address: Address): DogeLock {
    return new DogeLock("DogeLock", address);
  }

  balances(user: Address): BigInt {
    let result = super.call("balances", "balances(address):(uint256)", [
      ethereum.Value.fromAddress(user),
    ]);

    return result[0].toBigInt();
  }

  try_balances(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balances", "balances(address):(uint256)", [
      ethereum.Value.fromAddress(user),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dogeCoin(): Address {
    let result = super.call("dogeCoin", "dogeCoin():(address)", []);

    return result[0].toAddress();
  }

  try_dogeCoin(): ethereum.CallResult<Address> {
    let result = super.tryCall("dogeCoin", "dogeCoin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxLockAmount(): BigInt {
    let result = super.call("maxLockAmount", "maxLockAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxLockAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxLockAmount",
      "maxLockAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  personalMaxLockAmount(): BigInt {
    let result = super.call(
      "personalMaxLockAmount",
      "personalMaxLockAmount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_personalMaxLockAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "personalMaxLockAmount",
      "personalMaxLockAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  personalMinLockAmount(): BigInt {
    let result = super.call(
      "personalMinLockAmount",
      "personalMinLockAmount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_personalMinLockAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "personalMinLockAmount",
      "personalMinLockAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalBalance(): BigInt {
    let result = super.call("totalBalance", "totalBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalBalance", "totalBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _dogeCoin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BridgeCall extends ethereum.Call {
  get inputs(): BridgeCall__Inputs {
    return new BridgeCall__Inputs(this);
  }

  get outputs(): BridgeCall__Outputs {
    return new BridgeCall__Outputs(this);
  }
}

export class BridgeCall__Inputs {
  _call: BridgeCall;

  constructor(call: BridgeCall) {
    this._call = call;
  }

  get _oft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _sendParam(): BridgeCall_sendParamStruct {
    return changetype<BridgeCall_sendParamStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get _fee(): BridgeCall_feeStruct {
    return changetype<BridgeCall_feeStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }
}

export class BridgeCall__Outputs {
  _call: BridgeCall;

  constructor(call: BridgeCall) {
    this._call = call;
  }
}

export class BridgeCall_sendParamStruct extends ethereum.Tuple {
  get dstEid(): BigInt {
    return this[0].toBigInt();
  }

  get to(): Bytes {
    return this[1].toBytes();
  }

  get amountLD(): BigInt {
    return this[2].toBigInt();
  }

  get minAmountLD(): BigInt {
    return this[3].toBigInt();
  }

  get extraOptions(): Bytes {
    return this[4].toBytes();
  }

  get composeMsg(): Bytes {
    return this[5].toBytes();
  }

  get oftCmd(): Bytes {
    return this[6].toBytes();
  }
}

export class BridgeCall_feeStruct extends ethereum.Tuple {
  get nativeFee(): BigInt {
    return this[0].toBigInt();
  }

  get lzTokenFee(): BigInt {
    return this[1].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class LockCall extends ethereum.Call {
  get inputs(): LockCall__Inputs {
    return new LockCall__Inputs(this);
  }

  get outputs(): LockCall__Outputs {
    return new LockCall__Outputs(this);
  }
}

export class LockCall__Inputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LockCall__Outputs {
  _call: LockCall;

  constructor(call: LockCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetMaxCall extends ethereum.Call {
  get inputs(): SetMaxCall__Inputs {
    return new SetMaxCall__Inputs(this);
  }

  get outputs(): SetMaxCall__Outputs {
    return new SetMaxCall__Outputs(this);
  }
}

export class SetMaxCall__Inputs {
  _call: SetMaxCall;

  constructor(call: SetMaxCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxCall__Outputs {
  _call: SetMaxCall;

  constructor(call: SetMaxCall) {
    this._call = call;
  }
}

export class SetPersonalLimitCall extends ethereum.Call {
  get inputs(): SetPersonalLimitCall__Inputs {
    return new SetPersonalLimitCall__Inputs(this);
  }

  get outputs(): SetPersonalLimitCall__Outputs {
    return new SetPersonalLimitCall__Outputs(this);
  }
}

export class SetPersonalLimitCall__Inputs {
  _call: SetPersonalLimitCall;

  constructor(call: SetPersonalLimitCall) {
    this._call = call;
  }

  get _max(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _min(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPersonalLimitCall__Outputs {
  _call: SetPersonalLimitCall;

  constructor(call: SetPersonalLimitCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}
